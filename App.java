/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package PONCHITO;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.*;
import java.util.ArrayList;

public class App{

	Connection			conn	= null;
	Statement			stmt	= null;
	BufferedReader		in		= null;
	
	static final String	URL		= "jdbc:mysql://localhost:3306/PONCHITO?" + "autoReconnect=true&useSSL=false";
	static final String	USER	= "root"; // Usuario
	static final String	PASSWD	= ""; // Contraseña

	private void close() throws SQLException{
		stmt.close();
		conn.close();
	}
	
	private void dumpResultSet(ResultSet rset, boolean colNames) throws SQLException{

		ResultSetMetaData	rsetmd	= rset.getMetaData();
		int					i		= rsetmd.getColumnCount();
		
		if (colNames){

			for (int j = 1; j <= i; j++)
				System.out.print(rsetmd.getColumnName(j).toUpperCase() + "\t");
			System.out.println();
		}/
		
		while (rset.next()){
			for (int j = 1; j <= i; j++)
				System.out.print(rset.getString(j) + "\t");
			System.out.println();
		}
	}
	
	private void query(String statement, boolean colNames) throws SQLException{
		ResultSet rset = stmt.executeQuery(statement);
		dumpResultSet(rset, colNames);
		System.out.println();
		rset.close();
	}
	
	private boolean resultExists(String table, String col, String res, String... extra) throws SQLException {
		String query = "SELECT * FROM " + table + " WHERE " + col + " = '" + res + "'";
		
		for (int i = 0; i < extra.length; i++)
			query += " AND " + extra[i];
		
		ResultSet rset = stmt.executeQuery(query);
		return rset.next();
	}
	
	private void imprimirTitulo(String titulo){
		for (int i = 0; i < titulo.length(); i++)
			System.out.print("-");
		System.out.println("\n" + titulo);
		for (int i = 0; i < titulo.length(); i++)
			System.out.print("-");
		System.out.println();
	}

	private void imprimirDetallesDeHoteles(String sim) throws SQLException{
		String query;
		imprimirTitulo("DETALLES DE LOS HOTELES");
		query	= "SELECT H.* FROM HOTEL AS H, SIMULACIONHOTEL AS SH";
		query	+= " WHERE SH.Hotel = H.Nombre AND SH.Ciudad = H.Ciudad AND SH.Pais = H.Pais";
		query	+= " AND SH.Simulacion = " + sim;
		query(query, true);
	}
	
	private void imprimirDetallesDeLugares(String sim) throws SQLException{
		String query;
		imprimirTitulo("DETALLES DE LOS LUGARES A VISITAR");
		query	= "SELECT L.* FROM LUGARAVISITAR AS L, SIMULACIONLUGARAVISITAR AS SL";
		query	+= " WHERE SL.Lugar = L.Nombre AND SL.Ciudad = L.Ciudad AND SL.Pais = L.Pais";
		query	+= " AND SL.Simulacion = " + sim;
		query(query, true);
	}
	
	private void imprimirDetallesDeCircuitos(String sim) throws SQLException{
		String query;
		imprimirTitulo("FECHAS DE LOS CIRCUITOS SELECCIONADOS");
		query	= "SELECT * FROM SIMULACIONFECHACIRCUITO";
		query	+= " WHERE Simulacion = " + sim;
		query(query, true);
		
		imprimirTitulo("DETALLES DE LOS CIRCUITOS SELECCIONADOS");
		query	= "SELECT C.* FROM CIRCUITO AS C, SIMULACIONFECHACIRCUITO AS S";
		query	+= " WHERE C.Identificador = S.Circuito";
		query	+= " AND S.Simulacion = " + sim;
		ResultSet rs = stmt.executeQuery(query);
		dumpResultSet(rs, true);
		System.out.println();
		
		rs.beforeFirst();
		ArrayList<String> circuitos = new ArrayList<>();
		while (rs.next())
			circuitos.add(rs.getString(1));
		rs.close();
		
		for (String c : circuitos)
		{
			imprimirTitulo("ETAPAS DEL CIRCUITO " + c);
			query	= "SELECT E.* FROM ETAPA AS E, CIRCUITOETAPA AS CE";
			query	+= " WHERE E.Identificador = CE.Etapa AND E.Orden = CE.Orden AND E.NombreLugar = CE.NombreLugar AND E.Ciudad = CE.Ciudad AND E.Pais = CE.Pais";
			query	+= " AND CE.Circuito = '" + c + "'";
			query(query, true);
		}
	}
	
	public App() throws SQLException, ClassNotFoundException{
		Class.forName("com.mysql.cj.jdbc.Driver");
		System.out.print("Connecting to the database... ");
		
		conn = DriverManager.getConnection(URL, USER, PASSWD);
		System.out.println("connected\n");
		
		conn.setAutoCommit(false);
		conn.setTransactionIsolation(conn.TRANSACTION_SERIALIZABLE);
		stmt	= conn.createStatement();
		in		= new BufferedReader(new InputStreamReader(System.in));
	}
	
	private boolean menuPrincipal() throws SQLException, IOException{
		String statement;
		
		conn.rollback();
		
		System.out.println("(0) SALIR");
		System.out.println("(1) SIMULACIONES");
		System.out.println("(2) NAVEGAR EL FOLLETO");
		System.out.println("(3) RESERVAR");
		System.out.print("Opcion: ");
		
		switch (Integer.parseInt("0" + in.readLine())){
			case 0:
				return false;
			case 1:
				menuSimulacion();
				break;
			case 2:
				menuNavegacion();
				break;
			case 3:
				menuReservacion();
				break;
			default:
				System.out.println("POR FAVOR, ELIJA UNA OPCIÓN");
		}
		
		return true;
	}

	private void menuReservacion() throws IOException, SQLException{
		String	sim, ans, tipo, nom;
		boolean	empleado;
		
		do{
			System.out.println("INGRESE SU NUMERO DE SIMULACIÓN ('S' PARA SALIR)");
			sim = in.readLine();
		}

		while (!sim.equals("S") && !resultExists("SIMULACION", "Identificador", sim)); // end do-while
		
		if (!sim.equals("S")){
			String		query	= "SELECT NomCliente FROM SIMULACION WHERE Identificador = " + sim;
			ResultSet	rs		= stmt.executeQuery(query);
			rs.next();
			nom = rs.getString(1);
			rs.close();
			
			if (!resultExists("CLIENTE", "Nombre", nom)){
				System.out.println("EL NOMBRE EN LA SIMULACION NO ES RECONOCIDO COMO CLIENTE PREVIO");
				System.out.println("INGRESE SU NOMBRE");
				nom = in.readLine();
				System.out.println("COMPAÑIA, GRUPO O INDIVIDUAL?");
				tipo = in.readLine();
				System.out.println("ES USTED EMPLEADO? (Y/N)");
				ans			= in.readLine();
				empleado	= ans.equals("Y");
				query		= "INSERT INTO CLIENTE VALUES ('" + nom + "', '" + tipo.toLowerCase() + "', " + " YEAR(CURDATE()), " + (empleado ? "TRUE" : "FALSE") + ")";

				try{
					stmt.executeUpdate(query);
				}

				catch (SQLException e){
					System.out.println("HUBO UN ERROR DANDOLO DE ALTA COMO CLIENTE");
					System.out.println("LO MAS PROBABLE FUE UN ERROR EN EL TIPO DE CLIENTE");
					System.out.println("POR FAVOR INTENTE DE NUEVO");
					return;
				}
			}
			
			imprimirTitulo("DETALLES DE SIMULACION");
			query("SELECT * FROM SIMULACION WHERE Identificador = " + sim, true);
			imprimirDetallesDeCircuitos(sim);
			imprimirDetallesDeLugares(sim);
			imprimirDetallesDeHoteles(sim);
			
			System.out.println("DESEA RESERVAR SU SIMULACIÓN? (Y/N)");
			ans = in.readLine();

			if (ans.equals("Y")){
				stmt.executeUpdate("INSERT INTO RESERVACION VALUES ('" + nom + "', " + sim + ")");
				conn.commit();
				System.out.println("SIMULACIÓN RESERVADA EXITOSAMENTE!");
			}
		}
	}
	
	private void menuNavegacion() throws IOException, SQLException{

		boolean exit = false;
		while (!exit){

			System.out.println("SELECCIONE QUÉ INFORMACIÓN DESEA VER");
			System.out.println("(0) SALIR");
			System.out.println("(1) FECHAS DE CIRCUITOS");
			System.out.println("(2) CIRCUITOS");
			System.out.println("(3) LUGARES");
			System.out.println("(4) HOTELES");

			switch (Integer.parseInt("0" + in.readLine())){
				case 0:
					exit = true;
					break;

				case 1:
					{
					imprimirTitulo("FECHAS DE CIRCUITOS");
					query("SELECT * FROM FECHACIRCUITO", true);
					break;
				}

				case 2:{

					imprimirTitulo("CIRCUITOS");
					query("SELECT * FROM CIRCUITO", true);
					
					String cir;
					do{
						System.out.println("ELIJA UN CIRCUITO PARA VER SUS ETAPAS ('S' PARA SALIR)");
						cir = in.readLine();
					}

					while (!cir.equals("S") && !resultExists("CIRCUITO", "Identificador", cir)); // end do-while
					
					if (!cir.equals("S")){
						String query;
						imprimirTitulo("ETAPAS DEL CIRCUITO '" + cir + "'");
						query	= "SELECT E.*  FROM ETAPA AS E, CIRCUITOETAPA AS CE";
						query	+= " WHERE E.Identificador = CE.Etapa AND E.Orden = CE.Orden AND E.NombreLugar = CE.NombreLugar AND  E.Ciudad = CE.Ciudad AND E.Pais = CE.Pais";
						query	+= " AND CE.Circuito = '" + cir + "'";
						query	+= " ORDER BY E.Orden";
						query(query, true);
					}

					break;
				}

				case 3:{
					imprimirTitulo("LUGARES");
					query("SELECT * FROM LUGARAVISITAR", true);
					break;
				}

				case 4:{
					imprimirTitulo("HOTELES");
					query("SELECT * FROM HOTEL", true);
					break;
				}

				default:
					System.out.println("POR FAVOR, ELIJA UNA OPCIÓN");
					break;
			}
		}
	}
	
	private void menuSimulacion() throws IOException, SQLException{
		System.out.println("(1) DETALLES DE SIMULACIÓN");
		System.out.println("(2) HACER UNA SIMULACIÓN");
		
		switch (Integer.parseInt("0" + in.readLine())){

			case 1:{
				String sim;

				do{
					System.out.println("INSERTE EL NUMERO DE SIMULACIÓN PARA VER SUS DETALLES ('S' PARA SALIR)");
					sim = in.readLine();
				}

				while (!sim.equals("S") && !resultExists("SIMULACION", "Identificador", sim)); // end do-while

				if (!sim.equals("S")){
					imprimirTitulo("DETALLES DE SIMULACION");
					query("SELECT * FROM SIMULACION WHERE Identificador = " + sim, true);
					imprimirDetallesDeCircuitos(sim);
					imprimirDetallesDeLugares(sim);
					imprimirDetallesDeHoteles(sim);
				}

				break;
			}

			case 2:{
				System.out.println("INGRESE SU NOMBRE");
				String nom = in.readLine();
				System.out.println("INGRESE EL NUMERO DE PERSONAS");
				int numPersonas = Integer.parseInt(in.readLine());

				if (numPersonas == 0){
					System.out.println("EL NUMERO MINIMO DE PERSONAS ES 1, POR FAVOR INTENTE DE NUEVO");
					return;
				}

				String sql = "INSERT INTO SIMULACION (NomCliente, FechaSalida, FechaLlegada, NumPersonas, Costo)";
				sql += "VALUES( '" + nom + "', CURDATE(), CURDATE(), " + numPersonas + ", 0)";

				try{
					stmt.executeUpdate(sql, Statement.RETURN_GENERATED_KEYS);
				}

				catch (SQLException e){
					System.out.println("HUBO PROBLEMAS CREANDO SU SIMULACIÓN, POR FAVOR INTENTE DE NUEVO");
					return;
				}// end try - catch
				
				ResultSet rs = stmt.getGeneratedKeys();
				rs.next();
				int numSimulacion = rs.getInt(1);
				System.out.println("SU NUMERO DE SIMULACION ES..." + numSimulacion);
				
				String pai;

				do{
					System.out.println("SELECCIONE UN PAIS ('S' PARA SALIR)");
					query("SELECT DISTINCT Pais FROM CIUDAD", false);
					pai = in.readLine();
				}

				while (!pai.equals("S") && !resultExists("CIUDAD", "Pais", pai)); // end do-while
				
				if (!pai.equals("S"))
					seleccionarCiudad(numSimulacion, pai);
				break;
			}
		}
	}
	
	private void seleccionarCiudad(int sim, String pais) throws IOException, SQLException{
		String ciu;

		do{
			System.out.println("PAIS = '" + pais + "'");
			System.out.println("SELECCIONE UNA CIUDAD ('S' PARA SALIR)");
			query("SELECT Nombre FROM CIUDAD WHERE Pais = " + '"' + pais + '"', false);
			ciu = in.readLine();
		}

		while (!ciu.equals("S") && !resultExists("CIUDAD", "Nombre", ciu, "Pais = " + '"' + pais + '"')); // end do-while
		if (!ciu.equals("S"))
			seleccionarDestinos(sim, pais, ciu);
	}
	
	private void seleccionarDestinos(int sim, String pais, String ciudad) throws IOException, SQLException {

		String	sel;
		boolean	exit	= false;
		while (!exit){
			System.out.println("PAIS = '" + pais + "'; CIUDAD = '" + ciudad + "'");
			System.out.println("(0) SALIR Y CONFIRMAR ELECCIONES");
			System.out.println("(1) LUGARES A VISITAR");
			System.out.println("(2) CIRCUITOS");
			System.out.println("(3) HOTELES");

			switch (Integer.parseInt("0" + in.readLine())){
				case 0:
					System.out.println("RECUERDE QUE SU NUMERO DE SIMULACION ES EL '" + sim + "', ÚSELO PARA RESERVAR CON NOSOTROS");
					exit = true;
					break;
				case 1: // Lugares a visitar
					do{
						System.out.println("SELECCIONE UN LUGAR ('S' PARA SALIR)");
						query("SELECT Nombre FROM LUGARAVISITAR WHERE Pais = '" + pais + "' AND Ciudad = '" + ciudad + "'", false);
						sel = in.readLine();
					}

					while (!sel.equals("S") && !resultExists("LUGARAVISITAR", "Nombre", sel, "Pais = " + '"' + pais + '"', "Ciudad = " + '"' + ciudad + '"')); // end do-while
					if (!sel.equals("S"))
						confirmarLugar(sim, pais, ciudad, sel);
					break;
				case 2: // Circuitos
					do{

						System.out.println("SELECCIONE UN CIRCUITO ('S' PARA SALIR)");
						query("SELECT Identificador FROM CIRCUITO WHERE PaisSalida = '" + pais + "' AND CiudadSalida = " + '"' + ciudad + '"', false);
						sel = in.readLine();
					}

					while (!sel.equals("S") && !resultExists("CIRCUITO", "Identificador", sel, "PaisSalida = '" + pais + "'", "CiudadSalida = '" + ciudad + "'")); // end do-while
					if (!sel.equals("S"))
						confirmarCircuito(sim, pais, ciudad, sel);
					break;
				case 3: // Hoteles
					do{

						System.out.println("SELECCIONE UN HOTEL ('S' PARA SALIR)");
						query("SELECT Nombre FROM HOTEL WHERE Pais = '" + pais + "' AND Ciudad = '" + ciudad + "'", false);
						sel = in.readLine();
					}

					while (!sel.equals("S") && !resultExists("HOTEL", "Nombre", sel, "Pais = '" + pais + "'", "Ciudad = '" + ciudad + "'")); // end do-while
					if (!sel.equals("S"))
						confirmarHotel(sim, pais, ciudad, sel);
					break;
				default:
					System.out.println("POR FAVOR, ELIJA UNA OPCIÓN");
					break;
			}
		}
	}

	private void confirmarCircuito(int sim, String paisSalida, String ciudadSalida, String circuito) throws SQLException, IOException {
		String query;
		
		System.out.println("PAIS = '" + paisSalida + "'; CIUDAD = '" + ciudadSalida + "', CIRCUITO '" + circuito + "'");
		
		imprimirTitulo("INFORMACION DEL CIRCUITO '" + circuito + "'");
		query	= "SELECT * FROM CIRCUITO";
		query	+= " WHERE PaisSalida = '" + paisSalida + "'";
		query	+= " AND CiudadSalida = '" + ciudadSalida + "'";
		query	+= " AND Identificador = '" + circuito + "'";
		query(query, true);
		System.out.println();
		
		imprimirTitulo("ETAPAS DEL CIRCUITO '" + circuito + "'");
		query	= "SELECT E.*  FROM ETAPA AS E, CIRCUITOETAPA AS CE";
		query	+= " WHERE E.Identificador = CE.Etapa AND E.Orden = CE.Orden AND E.NombreLugar = CE.NombreLugar AND  E.Ciudad = CE.Ciudad AND E.Pais = CE.Pais";
		query	+= " AND CE.Circuito = '" + circuito + "'";
		query	+= " ORDER BY E.Orden";
		query(query, true);
		
		imprimirTitulo("FECHAS DISPONIBLES DEL CIRCUITO '" + circuito + "'");
		query	= "SELECT * FROM FECHACIRCUITO";
		query	+= " WHERE Identificador = '" + circuito + "'";
		query(query, true);
		System.out.println();
		
		System.out.println("DESEA RESERVAR ESTE CIRCUITO? (Y/N)");
		String ans = in.readLine();

		if (ans.equals("Y")){

			System.out.println("INSERTE LA FECHA EN QUE DESEA TENER EL CIRCUITO COMO DESTINO");
			String fecha = in.readLine();
			query	= "INSERT INTO SIMULACIONFECHACIRCUITO VALUES";
			query	+= "(" + sim + ", '" + circuito + "', '" + fecha + "')";

			try{
				stmt.executeUpdate(query);
				conn.commit();
			}

			catch (SQLException e){
				System.out.println("HUBO UN ERROR INSERTANDO LA FECHA, POR FAVOR INTENTE DE NUEVO");
				return;
			}

			System.out.println("HA ELEGIDO EL CIRCUITO '" + circuito + "' COMO DESTINO");
		}
	}
	
	private void confirmarLugar(int sim, String pais, String ciudad, String lugar) throws SQLException, IOException {

		String query = "";
		
		System.out.println("PAIS = '" + pais + "'; CIUDAD = '" + ciudad + "', LUGAR '" + lugar + "'");
		
		imprimirTitulo("INFORMACION DEL LUGAR '" + lugar + "'");
		query	+= "SELECT * FROM LUGARAVISITAR";
		query	+= " WHERE Pais = '" + pais + "'";
		query	+= " AND Ciudad = '" + ciudad + "'";
		query	+= " AND Nombre = '" + lugar + "'";
		query(query, true);
		
		System.out.println("DESEA TENER ESTE LUGAR COMO DESTINO? (Y/N)");
		String ans = in.readLine();

		if (ans.equals("Y")){
			query	= "INSERT INTO SIMULACIONLUGARAVISITAR VALUES";
			query	+= "(" + sim + ", '" + lugar + "', '" + ciudad + "', '" + pais + "')";
			stmt.executeUpdate(query);
			conn.commit();
			System.out.println("HA ELEGIDO EL LUGAR '" + lugar + "' COMO DESTINO");
		}
	}
	
	private void confirmarHotel(int sim, String pais, String ciudad, String hotel) throws SQLException, IOException {
		String query = "";
		
		System.out.println("PAIS = '" + pais + "'; CIUDAD = '" + ciudad + "'; HOTEL = '" + hotel + "'");
		
		imprimirTitulo("INFORMACION DEL HOTEL '" + hotel + "'");
		query	+= "SELECT * FROM HOTEL";
		query	+= " WHERE Pais = " + '"' + pais + '"';
		query	+= " AND Ciudad = " + '"' + ciudad + '"';
		query	+= " AND Nombre = " + '"' + hotel + '"';
		query(query, true);
		
		System.out.println("DESEA TENER ESTE HOTEL COMO DESTINO? (Y/N)");
		String ans = in.readLine();

		if (ans.equals("Y")){
			query	= "INSERT INTO SIMULACIONHOTEL VALUES";
			query	+= "(" + sim + ", '" + hotel + "', '" + ciudad + "', '" + pais + "')";
			stmt.executeUpdate(query);
			conn.commit();
			System.out.println("HA ELEGIDO EL HOTEL '" + hotel + "' COMO DESTINO");
		}
	}
	
	public static void main(String arg[]) throws SQLException, Exception{
		App app = new App();
		
		while (true)
			try{
				if (!app.menuPrincipal())
					break;
			}

			catch (Exception e){
				System.err.println("failed");
				e.printStackTrace(System.err);
			}/
			
		app.close();
	}
}
